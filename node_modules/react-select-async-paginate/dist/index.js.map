{"version":3,"sources":["../src/index.ts","../src/useAsyncPaginate.ts","../src/useAsyncPaginateBase.ts","../src/getInitialCache.ts","../src/getInitialOptionsCache.ts","../src/defaultShouldLoadMore.ts","../src/defaultReduceOptions.ts","../src/requestOptions.ts","../src/validateResponse.ts","../src/useComponents.ts","../src/wrapMenuList.tsx","../src/withAsyncPaginate.tsx","../src/reduceGroupedOptions.ts"],"sourcesContent":["import Select from 'react-select';\n\nimport { withAsyncPaginate } from './withAsyncPaginate';\n\nexport { wrapMenuList } from './wrapMenuList';\nexport { reduceGroupedOptions } from './reduceGroupedOptions';\n\nexport { withAsyncPaginate };\n\nexport {\n  checkIsResponse,\n  validateResponse,\n} from './validateResponse';\nexport { useAsyncPaginateBase } from './useAsyncPaginateBase';\nexport { useAsyncPaginate } from './useAsyncPaginate';\nexport { useComponents } from './useComponents';\n\nexport const AsyncPaginate = withAsyncPaginate(Select);\n\nexport * from './types';\n","import {\n  useState,\n  useCallback,\n} from 'react';\nimport type {\n  GroupBase,\n  InputActionMeta,\n} from 'react-select';\n\nimport {\n  useAsyncPaginateBase,\n} from './useAsyncPaginateBase';\n\nimport type {\n  UseAsyncPaginateParams,\n  UseAsyncPaginateBaseResult,\n  UseAsyncPaginateResult,\n} from './types';\n\nexport const useAsyncPaginate = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  params: UseAsyncPaginateParams<OptionType, Group, Additional>,\n  deps: ReadonlyArray<unknown> = [],\n): UseAsyncPaginateResult<OptionType, Group> => {\n  const {\n    inputValue: inputValueParam,\n    menuIsOpen: menuIsOpenParam,\n    defaultInputValue: defaultInputValueParam,\n    defaultMenuIsOpen: defaultMenuIsOpenParam,\n    onInputChange: onInputChangeParam,\n    onMenuClose: onMenuCloseParam,\n    onMenuOpen: onMenuOpenParam,\n  } = params;\n\n  const [inputValueState, setInputValue] = useState(\n    defaultInputValueParam || '',\n  );\n  const [menuIsOpenState, setMenuIsOpen] = useState(\n    !!defaultMenuIsOpenParam,\n  );\n\n  const inputValue: string = typeof inputValueParam === 'string'\n    ? inputValueParam\n    : inputValueState;\n\n  const menuIsOpen: boolean = typeof menuIsOpenParam === 'boolean'\n    ? menuIsOpenParam\n    : menuIsOpenState;\n\n  const onInputChange = useCallback((\n    nextInputValue: string,\n    actionMeta: InputActionMeta,\n  ): void => {\n    if (onInputChangeParam) {\n      onInputChangeParam(nextInputValue, actionMeta);\n    }\n\n    setInputValue(nextInputValue);\n  }, [onInputChangeParam]);\n\n  const onMenuClose = useCallback((): void => {\n    if (onMenuCloseParam) {\n      onMenuCloseParam();\n    }\n\n    setMenuIsOpen(false);\n  }, [onMenuCloseParam]);\n\n  const onMenuOpen = useCallback((): void => {\n    if (onMenuOpenParam) {\n      onMenuOpenParam();\n    }\n\n    setMenuIsOpen(true);\n  }, [onMenuOpenParam]);\n\n  const baseResult: UseAsyncPaginateBaseResult<OptionType, Group> = useAsyncPaginateBase(\n    {\n      ...params,\n      inputValue,\n      menuIsOpen,\n    },\n    deps,\n  );\n\n  return {\n    ...baseResult,\n    inputValue,\n    menuIsOpen,\n    onInputChange,\n    onMenuClose,\n    onMenuOpen,\n  };\n};\n","import {\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n} from 'react';\n\nimport type {\n  GroupBase,\n} from 'react-select';\n\nimport useIsMountedRef from 'use-is-mounted-ref';\n\nimport { useLazyRef } from '@vtaits/use-lazy-ref';\n\nimport { getInitialCache } from './getInitialCache';\nimport { getInitialOptionsCache } from './getInitialOptionsCache';\nimport { defaultShouldLoadMore } from './defaultShouldLoadMore';\nimport { defaultReduceOptions } from './defaultReduceOptions';\nimport { requestOptions } from './requestOptions';\n\nimport type {\n  OptionsCacheItem,\n  UseAsyncPaginateBaseResult,\n  UseAsyncPaginateBaseParams,\n  RequestOptionsCallerType,\n} from './types';\n\nexport const increaseStateId = (prevStateId: number): number => prevStateId + 1;\n\nexport const useAsyncPaginateBase = <\nOptionType,\nGroup extends GroupBase<OptionType>,\nAdditional,\n  >(\n    params: UseAsyncPaginateBaseParams<OptionType, Group, Additional>,\n    deps: ReadonlyArray<any> = [],\n  ): UseAsyncPaginateBaseResult<OptionType, Group> => {\n  const {\n    defaultOptions,\n    loadOptionsOnMenuOpen = true,\n    debounceTimeout = 0,\n    inputValue,\n    menuIsOpen,\n    filterOption = null,\n    reduceOptions = defaultReduceOptions,\n    shouldLoadMore = defaultShouldLoadMore,\n  } = params;\n\n  const isMountedRef = useIsMountedRef();\n\n  const isInitRef = useRef<boolean>(true);\n  const paramsRef = useRef<UseAsyncPaginateBaseParams<OptionType, Group, Additional>>(params);\n\n  paramsRef.current = params;\n\n  const setStateId = useState(0)[1];\n\n  const optionsCacheRef = useLazyRef(() => getInitialOptionsCache(params));\n\n  const callRequestOptions = useCallback((caller: RequestOptionsCallerType): void => {\n    requestOptions(\n      caller,\n      paramsRef,\n      optionsCacheRef,\n      debounceTimeout,\n      (reduceState) => {\n        optionsCacheRef.current = reduceState(optionsCacheRef.current);\n\n        if (isMountedRef.current) {\n          setStateId(increaseStateId);\n        }\n      },\n      reduceOptions,\n    );\n  }, [debounceTimeout]);\n\n  const handleScrolledToBottom = useCallback((): void => {\n    const currentInputValue = paramsRef.current.inputValue;\n    const currentOptions = optionsCacheRef.current[currentInputValue];\n\n    if (currentOptions) {\n      callRequestOptions('menu-scroll');\n    }\n  }, [callRequestOptions]);\n\n  useEffect(() => {\n    if (isInitRef.current) {\n      isInitRef.current = false;\n    } else {\n      optionsCacheRef.current = {};\n      setStateId(increaseStateId);\n    }\n\n    if (defaultOptions === true) {\n      callRequestOptions('autoload');\n    }\n  }, deps);\n\n  useEffect(() => {\n    if (menuIsOpen && !optionsCacheRef.current[inputValue]) {\n      callRequestOptions('input-change');\n    }\n  }, [inputValue]);\n\n  useEffect(() => {\n    if (\n      menuIsOpen\n      && !optionsCacheRef.current['']\n      && loadOptionsOnMenuOpen\n    ) {\n      callRequestOptions('menu-toggle');\n    }\n  }, [menuIsOpen]);\n\n  const currentOptions: OptionsCacheItem<\n  OptionType,\n  Group,\n  Additional\n  > = optionsCacheRef.current[inputValue]\n    || getInitialCache(params);\n\n  return {\n    handleScrolledToBottom,\n    shouldLoadMore,\n    filterOption,\n    isLoading: currentOptions.isLoading,\n    isFirstLoad: currentOptions.isFirstLoad,\n    options: currentOptions.options,\n  };\n};\n","import type {\n  GroupBase,\n} from 'react-select';\n\nimport type {\n  OptionsCacheItem,\n  UseAsyncPaginateBaseParams,\n} from './types';\n\nexport const getInitialCache = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  params: UseAsyncPaginateBaseParams<OptionType, Group, Additional>,\n): OptionsCacheItem<OptionType, Group, Additional> => ({\n    isFirstLoad: true,\n    options: [],\n    hasMore: true,\n    isLoading: false,\n    additional: params.additional,\n  });\n","import type {\n  GroupBase,\n} from 'react-select';\n\nimport type {\n  OptionsCache,\n  UseAsyncPaginateBaseParams,\n} from './types';\n\nexport const getInitialOptionsCache = <\nOptionType,\nGroup extends GroupBase<OptionType>,\nAdditional>(\n    {\n      options,\n      defaultOptions,\n      additional,\n      defaultAdditional,\n    }: UseAsyncPaginateBaseParams<OptionType, Group, Additional>,\n  ): OptionsCache<OptionType, Group, Additional> => {\n  const initialOptions = defaultOptions === true\n    ? null\n    : (defaultOptions instanceof Array)\n      ? defaultOptions\n      : options;\n\n  if (initialOptions) {\n    return {\n      '': {\n        isFirstLoad: false,\n        isLoading: false,\n        options: initialOptions,\n        hasMore: true,\n        additional: defaultAdditional || additional,\n      },\n    };\n  }\n\n  return {};\n};\n","import type {\n  ShouldLoadMore,\n} from './types';\n\nconst AVAILABLE_DELTA = 10;\n\nexport const defaultShouldLoadMore: ShouldLoadMore = (scrollHeight, clientHeight, scrollTop) => {\n  const bottomBorder = scrollHeight - clientHeight - AVAILABLE_DELTA;\n\n  return bottomBorder < scrollTop;\n};\n","import type {\n  GroupBase,\n  OptionsOrGroups,\n} from 'react-select';\n\nexport const defaultReduceOptions = <OptionType, Group extends GroupBase<OptionType>>(\n  prevOptions: OptionsOrGroups<OptionType, Group>,\n  loadedOptions: OptionsOrGroups<OptionType, Group>,\n) => [...prevOptions, ...loadedOptions];\n","import type {\n  MutableRefObject,\n} from 'react';\n\nimport type {\n  GroupBase,\n} from 'react-select';\nimport sleep from 'sleep-promise';\n\nimport { getInitialCache } from './getInitialCache';\nimport { validateResponse } from './validateResponse';\n\nimport type {\n  OptionsCache,\n  OptionsCacheItem,\n  UseAsyncPaginateBaseParams,\n  ReduceOptions,\n  RequestOptionsCallerType,\n} from './types';\n\ntype MapOptionsCache<OptionType, Group extends GroupBase<OptionType>, Additional> = (\n  prevCache: OptionsCache<OptionType, Group, Additional>,\n) => OptionsCache<OptionType, Group, Additional>;\n\ntype SetOptionsCache<OptionType, Group extends GroupBase<OptionType>, Additional> = (\n  stateMapper: MapOptionsCache<OptionType, Group, Additional>,\n) => void;\n\nexport const requestOptions = async <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  caller: RequestOptionsCallerType,\n  paramsRef: MutableRefObject<UseAsyncPaginateBaseParams<OptionType, Group, Additional>>,\n  optionsCacheRef: MutableRefObject<OptionsCache<OptionType, Group, Additional>>,\n  debounceTimeout: number,\n  setOptionsCache: SetOptionsCache<OptionType, Group, Additional>,\n  reduceOptions: ReduceOptions<OptionType, Group, Additional>,\n): Promise<void> => {\n  const currentInputValue = paramsRef.current.inputValue;\n\n  const isCacheEmpty = !optionsCacheRef.current[currentInputValue];\n\n  const currentOptions: OptionsCacheItem<OptionType, Group, Additional> = isCacheEmpty\n    ? getInitialCache(paramsRef.current)\n    : optionsCacheRef.current[currentInputValue];\n\n  if (currentOptions.isLoading || !currentOptions.hasMore) {\n    return;\n  }\n\n  setOptionsCache((\n    prevOptionsCache: OptionsCache<OptionType, Group, Additional>,\n  ): OptionsCache<OptionType, Group, Additional> => ({\n    ...prevOptionsCache,\n    [currentInputValue]: {\n      ...currentOptions,\n      isLoading: true,\n    },\n  }));\n\n  if (debounceTimeout > 0 && caller === 'input-change') {\n    await sleep(debounceTimeout);\n\n    const newInputValue = paramsRef.current.inputValue;\n\n    if (currentInputValue !== newInputValue) {\n      setOptionsCache((prevOptionsCache) => {\n        if (isCacheEmpty) {\n          const {\n            [currentInputValue]: itemForDelete,\n            ...restCache\n          } = prevOptionsCache;\n\n          return restCache;\n        }\n\n        return {\n          ...prevOptionsCache,\n          [currentInputValue]: {\n            ...currentOptions,\n            isLoading: false,\n          },\n        };\n      });\n\n      return;\n    }\n  }\n\n  let response;\n  let hasError = false;\n\n  try {\n    const {\n      loadOptions,\n    } = paramsRef.current;\n\n    response = await loadOptions(\n      currentInputValue,\n      currentOptions.options,\n      currentOptions.additional,\n    );\n  } catch (e) {\n    hasError = true;\n  }\n\n  if (hasError) {\n    setOptionsCache((prevOptionsCache) => ({\n      ...prevOptionsCache,\n      [currentInputValue]: {\n        ...currentOptions,\n        isLoading: false,\n      },\n    }));\n\n    return;\n  }\n\n  if (validateResponse(response)) {\n    const {\n      options,\n      hasMore,\n    } = response;\n\n    // eslint-disable-next-line no-prototype-builtins\n    const newAdditional = response.hasOwnProperty('additional')\n      ? response.additional\n      : currentOptions.additional;\n\n    setOptionsCache((prevOptionsCache) => ({\n      ...prevOptionsCache,\n      [currentInputValue]: {\n        ...currentOptions,\n        options: reduceOptions(currentOptions.options, options, newAdditional),\n        hasMore: !!hasMore,\n        isLoading: false,\n        isFirstLoad: false,\n        additional: newAdditional,\n      },\n    }));\n  }\n};\n","import type {\n  GroupBase,\n} from 'react-select';\n\nimport type {\n  Response,\n} from './types';\n\nexport const errorText = '[react-select-async-paginate] response of \"loadOptions\" should be an object with \"options\" prop, which contains array of options.';\n\nexport const checkIsResponse = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  response: unknown,\n): response is Response<OptionType, Group, Additional> => {\n  if (!response) {\n    return false;\n  }\n\n  const {\n    options,\n    hasMore,\n  } = response as {\n    options?: unknown;\n    hasMore?: unknown;\n  };\n\n  if (!Array.isArray(options)) {\n    return false;\n  }\n\n  if (typeof hasMore !== 'boolean' && typeof hasMore !== 'undefined') {\n    return false;\n  }\n\n  return true;\n};\n\nexport const validateResponse = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  response: unknown,\n): response is Response<OptionType, Group, Additional> => {\n  if (!checkIsResponse(response)) {\n    // eslint-disable-next-line no-console\n    console.error(errorText, 'Received:', response);\n    throw new Error(errorText);\n  }\n\n  return true;\n};\n","import {\n  useMemo,\n} from 'react';\nimport type {\n  GroupBase,\n  Props as SelectProps,\n} from 'react-select';\n\nimport { components as defaultComponents } from 'react-select';\n\nimport { wrapMenuList } from './wrapMenuList';\n\nexport const MenuList = wrapMenuList(defaultComponents.MenuList);\n\nexport type SelectComponentsConfig<\nOptionType,\nIsMulti extends boolean,\nGroup extends GroupBase<OptionType>,\n> = Partial<SelectProps<OptionType, IsMulti, Group>['components']>;\n\nexport const useComponents = <\nOptionType,\nGroup extends GroupBase<OptionType>,\nIsMulti extends boolean,\n>(\n    components: SelectComponentsConfig<OptionType, IsMulti, Group>,\n  ): SelectComponentsConfig<OptionType, IsMulti, Group> => useMemo(() => ({\n    MenuList,\n    ...components,\n  }), [components]);\n","import {\n  useEffect,\n  useRef,\n  useCallback,\n} from 'react';\nimport type {\n  ReactElement,\n} from 'react';\n\nimport type {\n  GroupBase,\n  MenuListProps,\n} from 'react-select';\n\nimport composeRefs from '@seznam/compose-react-refs';\n\nimport type {\n  ShouldLoadMore,\n} from './types';\n\nexport const CHECK_TIMEOUT = 300;\n\nexport type BaseSelectProps = {\n  handleScrolledToBottom?: () => void;\n  shouldLoadMore: ShouldLoadMore;\n};\n\ntype MenuListType <\nOption = unknown,\nIsMulti extends boolean = boolean,\nGroup extends GroupBase<Option> = GroupBase<Option>,\n> = (props: MenuListProps<Option, IsMulti, Group>) => ReactElement;\n\nexport function wrapMenuList<\nOption = unknown,\nIsMulti extends boolean = boolean,\nGroup extends GroupBase<Option> = GroupBase<Option>,\n>(\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  MenuList: MenuListType<Option, IsMulti, Group>,\n) {\n  function WrappedMenuList(props: MenuListProps<Option, IsMulti, Group>) {\n    const {\n      selectProps,\n      innerRef,\n    } = props;\n\n    const {\n      handleScrolledToBottom,\n      shouldLoadMore,\n    } = selectProps as unknown as BaseSelectProps;\n\n    const checkTimeoutRef = useRef<NodeJS.Timeout>();\n    const menuListRef = useRef<HTMLElement>(null);\n\n    const shouldHandle = useCallback(() => {\n      const el = menuListRef.current;\n\n      // menu is not rendered\n      if (!el) {\n        return false;\n      }\n\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n      } = el;\n\n      return shouldLoadMore(scrollHeight, clientHeight, scrollTop);\n    }, [shouldLoadMore]);\n\n    const checkAndHandle = useCallback(() => {\n      if (shouldHandle()) {\n        if (handleScrolledToBottom) {\n          handleScrolledToBottom();\n        }\n      }\n    }, [shouldHandle, handleScrolledToBottom]);\n\n    const setCheckAndHandleTimeout = useCallback(() => {\n      checkAndHandle();\n\n      checkTimeoutRef.current = setTimeout(setCheckAndHandleTimeout, CHECK_TIMEOUT);\n    }, [checkAndHandle]);\n\n    useEffect(() => {\n      setCheckAndHandleTimeout();\n\n      return (): void => {\n        if (checkTimeoutRef.current) {\n          clearTimeout(checkTimeoutRef.current);\n        }\n      };\n    }, []);\n\n    return (\n      <MenuList\n        {...props}\n        innerRef={composeRefs<HTMLElement>(innerRef, menuListRef)}\n      />\n    );\n  }\n\n  return WrappedMenuList;\n}\n","import type {\n  Ref,\n  ReactElement,\n} from 'react';\nimport type {\n  GroupBase,\n  Props as SelectProps,\n  SelectInstance,\n} from 'react-select';\n\nimport {\n  useAsyncPaginate,\n} from './useAsyncPaginate';\nimport {\n  useComponents,\n} from './useComponents';\n\nimport type {\n  UseAsyncPaginateResult,\n  AsyncPaginateProps,\n  WithAsyncPaginateType,\n} from './types';\n\ntype SelectComponentType = <\nOption = unknown,\nIsMulti extends boolean = boolean,\nGroup extends GroupBase<Option> = GroupBase<Option>,\n>(props: SelectProps<Option, IsMulti, Group> & {\n  ref?: Ref<SelectInstance<Option, IsMulti, Group>>;\n}) => ReactElement;\n\nexport function withAsyncPaginate(\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  SelectComponent: SelectComponentType,\n): WithAsyncPaginateType {\n  function WithAsyncPaginate<\n  OptionType,\n  Group extends GroupBase<OptionType>,\n  Additional,\n  IsMulti extends boolean = false,\n  >(props: AsyncPaginateProps<OptionType, Group, Additional, IsMulti>): ReactElement {\n    const {\n      components,\n      selectRef,\n      isLoading: isLoadingProp,\n      cacheUniqs,\n      ...rest\n    } = props;\n\n    const asyncPaginateProps: UseAsyncPaginateResult<OptionType, Group> = useAsyncPaginate(\n      rest,\n      cacheUniqs,\n    );\n\n    const processedComponents = useComponents<OptionType, Group, IsMulti>(components);\n\n    const isLoading = typeof isLoadingProp === 'boolean'\n      ? isLoadingProp\n      : asyncPaginateProps.isLoading;\n\n    return (\n      <SelectComponent\n        {...props}\n        {...asyncPaginateProps}\n        isLoading={isLoading}\n        components={processedComponents}\n        ref={selectRef}\n      />\n    );\n  }\n\n  WithAsyncPaginate.defaultProps = {\n    selectRef: null,\n    cacheUniqs: [],\n    components: {},\n  };\n\n  return WithAsyncPaginate;\n}\n","import type {\n  GroupBase,\n  OptionsOrGroups,\n} from 'react-select';\n\nexport const checkGroup = (group: unknown): group is GroupBase<unknown> => {\n  if (!group) {\n    return false;\n  }\n\n  const {\n    label,\n    options,\n  } = group as {\n    label?: unknown;\n    options?: unknown;\n  };\n\n  if (typeof label !== 'string' && typeof label !== 'undefined') {\n    return false;\n  }\n\n  if (!Array.isArray(options)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const reduceGroupedOptions = <\nOptionType,\nGroup extends GroupBase<OptionType>,\n>(\n    prevOptions: OptionsOrGroups<OptionType, Group>,\n    loadedOptions: OptionsOrGroups<OptionType, Group>,\n  ): OptionsOrGroups<OptionType, Group> => {\n  const res = prevOptions.slice();\n\n  const mapLabelToIndex: Record<string, number> = {};\n  let prevOptionsIndex = 0;\n  const prevOptionsLength = prevOptions.length;\n\n  loadedOptions.forEach((optionOrGroup) => {\n    const group = checkGroup(optionOrGroup)\n      ? optionOrGroup\n      : {\n        options: [optionOrGroup],\n      } as unknown as Group;\n\n    const {\n      label = '',\n    } = group;\n\n    let groupIndex = mapLabelToIndex[label];\n    if (typeof groupIndex !== 'number') {\n      for (;\n        prevOptionsIndex < prevOptionsLength && typeof mapLabelToIndex[label] !== 'number';\n        ++prevOptionsIndex\n      ) {\n        const prevGroup = prevOptions[prevOptionsIndex];\n\n        if (checkGroup(prevGroup)) {\n          mapLabelToIndex[prevGroup.label || ''] = prevOptionsIndex;\n        }\n      }\n\n      groupIndex = mapLabelToIndex[label];\n    }\n\n    if (typeof groupIndex !== 'number') {\n      mapLabelToIndex[label] = res.length;\n      res.push(group);\n      return;\n    }\n\n    res[groupIndex] = {\n      ...res[groupIndex],\n      options: [...(res[groupIndex] as Group).options, ...group.options],\n    };\n  });\n\n  return res;\n};\n"],"mappings":"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","names":["import_react_select","import_react","sleep","useIsMountedRef","currentOptions","import_react","import_react","MenuList","composeRefs","defaultComponents","import_jsx_runtime","Select"]}